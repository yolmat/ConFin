// Prisma schema
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

/// Roles
enum UserRole {
  USER
  PREMIUM
  ADMIN
}

/// Status de transações
enum TransactionStatus {
  PENDING
  PARTIALLY_PAID
  PAID
}

/// Tipo de movimento (entrada ou saída)
enum MovementType {
  INCOME
  EXPENSE
}

/// Usuários
model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  phone     String?
  avatar    String?
  role      UserRole @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamentos
  transactions   Transaction[]
  passwordResets PasswordReset[]
  RefreshToken   RefreshToken[]
}

/// Transação
model Transaction {
  id            String            @id @default(cuid())
  userId        String
  user          User              @relation(fields: [userId], references: [id], onDelete: Cascade)
  title         String
  type          MovementType
  amountTotal   Float
  paidAmount    Float             @default(0)
  pendingAmount Float             @default(0)
  status        TransactionStatus @default(PENDING)
  date          DateTime
  note          String?
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
}

/// Reset de senha
model PasswordReset {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  token     String   @unique
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  expiresAt DateTime
  createdAt DateTime @default(now())
}
